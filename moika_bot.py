import os
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters

from flask import Flask, request
import asyncio

BOT_TOKEN = os.environ.get("BOT_TOKEN")
GROUP_CHAT_ID = int(os.getenv("GROUP_CHAT_ID"))  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ

user_message_map = {}

# --- Telegram application ---
app = ApplicationBuilder().token(BOT_TOKEN).build()

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    user_name = update.message.from_user.full_name
    user_id = update.message.from_user.id

    if user_message == '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':
        await update.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ üì®")
        return
    elif user_message == '‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤':
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ üôè")
        return
    elif user_message == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã':
        await update.message.reply_text("üìç –ê–¥—Ä–µ—Å: —É–ª. –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∞—è, 29\nüìû –¢–µ–ª: +7 (963) 822-32-01 –∏–ª–∏ 32-32-01")
        return

    sent_message = await context.bot.send_message(
        chat_id=GROUP_CHAT_ID,
        text=f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name} (ID: {user_id}):\n\n{user_message}"
    )

    user_message_map[sent_message.message_id] = user_id
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚úÖ")

async def handle_group_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.reply_to_message:
        reply_msg = update.message.reply_to_message
        original_msg_id = reply_msg.message_id
        text = update.message.text

        if original_msg_id in user_message_map:
            target_user_id = user_message_map[original_msg_id]
            await context.bot.send_message(
                chat_id=target_user_id,
                text=f"üë®‚Äçüîß –û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n{text}"
            )

app.add_handler(MessageHandler(filters.TEXT & filters.ChatType.PRIVATE, handle_message))
app.add_handler(MessageHandler(filters.TEXT & filters.Chat(chat_id=GROUP_CHAT_ID), handle_group_reply))

# --- Flask server ---
web_app = Flask(__name__)

@web_app.route('/')
def home():
    return "–ë–æ—Ç –∂–∏–≤!"

@web_app.route(f"/{BOT_TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), app.bot)
    asyncio.run(app.update_queue.put(update))
    return "ok"

if __name__ == '__main__':
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    import requests
    url = f"https://{os.environ.get('RENDER_EXTERNAL_URL')}/{BOT_TOKEN}"
    requests.get(f"https://api.telegram.org/bot{BOT_TOKEN}/setWebhook?url={url}")

    port = int(os.environ.get("PORT", 8080))
    web_app.run(host='0.0.0.0', port=port)
