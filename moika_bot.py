import os
import logging
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
GROUP_CHAT_ID = int(os.getenv("GROUP_CHAT_ID"))        # ID –≥—Ä—É–ø–ø—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
CHANNEL_POST_ID = int(os.getenv("CHANNEL_POST_ID"))  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏
CONTACT_BUTTON_URL = os.getenv("CONTACT_BUTTON_URL")  # URL –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–≤—è–∑–∏
ADMIN_ID = int(os.getenv("ADMIN_ID"))                  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")],
        [KeyboardButton("‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")],
        [KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
        reply_markup=reply_markup
    )

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    # –ö–æ–Ω—Ç–∞–∫—Ç—ã
    if text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text("üìç –ê–¥—Ä–µ—Å: —É–ª. –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∞—è, 29\nüìû –¢–µ–ª: +7 (963) 822-32-01 –∏–ª–∏ 32-32-01")
        return

    # –ù–∞—á–∞–ª–æ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    if text in ["‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"]:
        context.user_data['awaiting_feedback'] = text
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –º—ã –µ–≥–æ –ø–æ–ª—É—á–∏–º!")
        return

    # –ü—Ä–∏—à–ª–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏
    if context.user_data.get('awaiting_feedback'):
        feedback_type = context.user_data.pop('awaiting_feedback')
        await forward_to_group(update, context, feedback_type)
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç, –º—ã —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏–º.")
        return

    # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")

# --- –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ---
async def forward_to_group(update: Update, context: ContextTypes.DEFAULT_TYPE, feedback_type: str):
    user = update.message.from_user
    text = (
        f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ({feedback_type}):\n"
        f"–û—Ç: @{user.username or user.first_name}\n"
        f"ID: {user.id}\n"
        f"–°–æ–æ–±—â–µ–Ω–∏–µ: {update.message.text}"
    )
    await context.bot.send_message(chat_id=GROUP_CHAT_ID, text=text)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –∏–∑ –≥—Ä—É–ø–ø—ã ---
async def group_reply_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.reply_to_message:
        for line in update.message.reply_to_message.text.splitlines():
            if line.startswith("ID: "):
                try:
                    user_id = int(line.replace("ID: ", "").strip())
                    await context.bot.send_message(
                        chat_id=user_id,
                        text=update.message.text
                    )
                except Exception as e:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É: {e}")
                break

# --- –ö–æ–º–∞–Ω–¥–∞ /send —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–µ–¥–∏–∞ ---
async def send_post(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    caption = ' '.join(context.args) if context.args else ''
    try:
        sent_message = None
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–¥–∏–∞
        if update.message.reply_to_message:
            original = update.message.reply_to_message
            # –§–æ—Ç–æ
            if original.photo:
                file_id = original.photo[-1].file_id
                sent_message = await context.bot.send_photo(
                    chat_id=CHANNEL_POST_ID,
                    photo=file_id,
                    caption=caption
                )
            # –í–∏–¥–µ–æ
            elif original.video:
                file_id = original.video.file_id
                sent_message = await context.bot.send_video(
                    chat_id=CHANNEL_POST_ID,
                    video=file_id,
                    caption=caption
                )
            else:
                await update.message.reply_text("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ.")
                return
        else:
            if not caption:
                await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –º–µ–¥–∏–∞.")
                return
            sent_message = await context.bot.send_message(
                chat_id=CHANNEL_POST_ID,
                text=caption
            )
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥ –ø–æ—Å—Ç
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üì© –°–≤—è–∑–∞—Ç—å—Å—è", url=CONTACT_BUTTON_URL)]
        ])
        await context.bot.send_message(
            chat_id=CHANNEL_POST_ID,
            text="–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø—Ä—è–º–æ –≤ Telegram! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
            reply_to_message_id=sent_message.message_id,
            reply_markup=keyboard
        )
        await update.message.reply_text("–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞.")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("send", send_post))
    app.add_handler(MessageHandler(filters.Chat(chat_id=GROUP_CHAT_ID) & filters.REPLY, group_reply_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω..." )
    app.run_polling()
