import os
from telegram import Update
from telegram.ext import ApplicationBuilder, Application, CommandHandler, MessageHandler, filters, ContextTypes

from flask import Flask
from threading import Thread

# --- Flask –¥–ª—è –ø–∏–Ω–≥–∞ ---
app_web = Flask('')

@app_web.route('/')
def home():
    return "–ë–æ—Ç –∂–∏–≤!"

def run():
    app_web.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()
# ----------------------

BOT_TOKEN = os.environ.get("BOT_TOKEN")  # ‚Üê —Ç–≤–æ–π —Ç–æ–∫–µ–Ω
GROUP_CHAT_ID = os.getenv("GROUP_CHAT_ID")  # ‚Üê ID —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã

user_message_map = {}

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    user_name = update.message.from_user.full_name
    user_id = update.message.from_user.id

    if user_message == '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':
        await update.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ üì®")
        return
    elif user_message == '‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤':
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ üôè")
        return
    elif user_message == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã':
        await update.message.reply_text("üìç –ê–¥—Ä–µ—Å: —É–ª. –ö–æ–º—Å–æ–º–ª—å—Å–∫–∞—è, 29\nüìû –¢–µ–ª: +7 (963) 822-32-01 –∏–ª–∏ 32-32-01")
        return

    sent_message = await context.bot.send_message(
        chat_id=GROUP_CHAT_ID,
        text=f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name} (ID: {user_id}):\n\n{user_message}"
    )

    user_message_map[sent_message.message_id] = user_id
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚úÖ")

async def handle_group_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.reply_to_message:
        reply_msg = update.message.reply_to_message
        original_msg_id = reply_msg.message_id
        text = update.message.text

        if original_msg_id in user_message_map:
            target_user_id = user_message_map[original_msg_id]
            await context.bot.send_message(
                chat_id=target_user_id,
                text=f"üë®‚Äçüîß –û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n{text}"
            )

if __name__ == '__main__':
    keep_alive()  # ‚Üê –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω—Ç–∏-—É—Å—ã–ø–ª—è–ª–∫—É

    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & filters.ChatType.PRIVATE, handle_message))
    app.add_handler(MessageHandler(filters.TEXT & filters.Chat(chat_id=GROUP_CHAT_ID), handle_group_reply))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ")
    app.run_polling()